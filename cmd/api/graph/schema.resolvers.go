package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"
	"fmt"

	"github.com/calloc134/golang-ddd-test/cmd/api/graph/model"
)

// CreateUser is the resolver for the createUser field.
func (r *mutationResolver) CreateUser(ctx context.Context, input model.CreateUserInput) (*model.User, error) {
	panic(fmt.Errorf("not implemented: CreateUser - createUser"))
}

// UpdateUserByUlid is the resolver for the updateUserByUlid field.
func (r *mutationResolver) UpdateUserByUlid(ctx context.Context, ulid string, input model.UpdateUserInput) (*model.User, error) {
	panic(fmt.Errorf("not implemented: UpdateUserByUlid - updateUserByUlid"))
}

// DeleteUserByUlid is the resolver for the deleteUserByUlid field.
func (r *mutationResolver) DeleteUserByUlid(ctx context.Context, ulid string) (*model.User, error) {
	panic(fmt.Errorf("not implemented: DeleteUserByUlid - deleteUserByUlid"))
}

// FindAllUsers is the resolver for the findAllUsers field.
func (r *queryResolver) FindAllUsers(ctx context.Context) ([]*model.User, error) {
	panic(fmt.Errorf("not implemented: FindAllUsers - findAllUsers"))
}

// FindUserByUlid is the resolver for the findUserByUlid field.
func (r *queryResolver) FindUserByUlid(ctx context.Context, ulid string) (*model.User, error) {
	panic(fmt.Errorf("not implemented: FindUserByUlid - findUserByUlid"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
